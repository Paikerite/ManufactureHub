@using ManufactureHub.Data.Enums
@model IEnumerable<ManufactureHub.Models.SectionViewModel>

@{
    ViewData["Title"] = "Секції";
}

<div class="container-fluid board-container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Дашборд секцій</h2>
        @if (User.IsInRole("Admin") || User.IsInRole("HeadFacility") || User.IsInRole("TeamLeadWorkstation"))
        {
            <a asp-action="Create" class="btn btn-primary">Створити</a>
        }
    </div>

    <div class="row">
        @foreach (var sct in Model)
        {
            <div class="col-md-4 mb-4">
                <div class="card shadow-sm">
                    <!-- Section Header -->
                    <div class="card-header d-flex justify-content-between align-items-center" style="background-color: @sct.PrimaryColor;">
                        <h5 class="mb-0"><a asp-action="Details" asp-route-id="@sct.Id" class="link-light link-underline-light text-decoration-none">@sct.Name</a></h5>
                        <div class="d-flex align-items-center">
                            <span class="badge bg-secondary me-2">@sct.Tasks.Count</span>
                            <!-- Dropdown Button -->
                            @if (User.Identity.IsAuthenticated)
                            {
                                <div class="dropdown">
                                    <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                                        <i class="bi bi-three-dots-vertical"></i>
                                    </button>
                                    <ul class="dropdown-menu dropdown-menu-end">
                                        @if (User.IsInRole("Admin") || User.IsInRole("HeadFacility") || User.IsInRole("TeamLeadWorkstation") || User.IsInRole("TeamLeadSection"))
                                        {
                                            <li><a class="dropdown-item" asp-action="Edit" asp-route-id="@sct.Id">Редагувати</a></li>
                                        }
                                        @if (User.IsInRole("Admin") || User.IsInRole("HeadFacility") || User.IsInRole("TeamLeadWorkstation"))
                                        {
                                            <li><a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@sct.Id">Видалити</a></li>
                                        }
                                    </ul>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card-body">
                        <!-- Operators -->
                        <div class="mb-3">
                            @foreach (var oprts in sct.Users)
                            {
                                <div class="d-flex align-items-center mb-2">
                                    <img src="@oprts.ProfilePicture" alt="@oprts.Name" class="rounded-circle me-2" width="32" height="32" />
                                    @if(oprts.Id == sct.IdTeamLead)
                                    {
                                        <span><a asp-controller="Account" asp-action="Details" asp-route-id="@oprts.Id" class="link-dark link-underline-light text-decoration-none">@oprts.SurName @oprts.Name[0]. @oprts.PatronymicName[0]. <p class="fs-6 font-monospace link-primary">Тімлідер</p></a></span>
                                    }
                                    else
                                    {
                                        <span><a asp-controller="Account" asp-action="Details" asp-route-id="@oprts.Id" class="link-dark link-underline-light text-decoration-none">@oprts.SurName @oprts.Name[0]. @oprts.PatronymicName[0].</a></span>
                                    }
                                    <span class="ms-2 rounded-circle d-inline-block" style="width: 12px; height: 12px; background-color: @(oprts.IsActive ? "green" : "gray");"></span>
                                </div>
                            }
                        </div>

                        <!-- Tasks -->
                        @foreach (var task in sct.Tasks)
                        {
                            <div class="mb-3 border p-3 rounded">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h6 class="mb-0">
                                        @task.Name
                                    </h6>
                                    <small class="text-muted">
                                        @{
                                            var daysDiff = (task.Deadline - DateTime.Now).Days;
                                            if (daysDiff < 0)
                                            {
                                                <span>@Math.Abs(daysDiff) days ago</span>
                                            }
                                            else
                                            {
                                                <span>Due in @daysDiff days</span>
                                            }
                                        }
                                    </small>
                                </div>
                                <div class="mt-2 d-flex justify-content-between align-items-center">
                                    <small class="text-muted">@task.StatusTask</small>
                                    <span class="badge @GetPriorityClass(task.Priority)">
                                        @task.Priority
                                    </span>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    string GetPriorityClass(Priority priority)
    {
        return priority switch
        {
            Priority.Low => "bg-success",
            Priority.Medium => "bg-warning",
            Priority.High => "bg-danger",
            _ => "bg-secondary"
        };
    }
}